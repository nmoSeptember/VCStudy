//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApp1.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
        "nSettingsService/03", ConfigurationName="ServiceReference1.ConfigurationSettingsServiceSoap")]
    public interface ConfigurationSettingsServiceSoap {
        
        // CODEGEN: Generating message contract since message GetWorkitemTrackingVersionRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03/GetWorkitemTrackingVersion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WpfApp1.ServiceReference1.GetWorkitemTrackingVersionResponse GetWorkitemTrackingVersion(WpfApp1.ServiceReference1.GetWorkitemTrackingVersionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03/GetWorkitemTrackingVersion", ReplyAction="*")]
        System.Threading.Tasks.Task<WpfApp1.ServiceReference1.GetWorkitemTrackingVersionResponse> GetWorkitemTrackingVersionAsync(WpfApp1.ServiceReference1.GetWorkitemTrackingVersionRequest request);
        
        // CODEGEN: Generating message contract since message GetMaxAttachmentSizeRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03/GetMaxAttachmentSize", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WpfApp1.ServiceReference1.GetMaxAttachmentSizeResponse GetMaxAttachmentSize(WpfApp1.ServiceReference1.GetMaxAttachmentSizeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03/GetMaxAttachmentSize", ReplyAction="*")]
        System.Threading.Tasks.Task<WpfApp1.ServiceReference1.GetMaxAttachmentSizeResponse> GetMaxAttachmentSizeAsync(WpfApp1.ServiceReference1.GetMaxAttachmentSizeRequest request);
        
        // CODEGEN: Generating message contract since message SetMaxAttachmentSizeRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03/SetMaxAttachmentSize", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WpfApp1.ServiceReference1.SetMaxAttachmentSizeResponse SetMaxAttachmentSize(WpfApp1.ServiceReference1.SetMaxAttachmentSizeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03/SetMaxAttachmentSize", ReplyAction="*")]
        System.Threading.Tasks.Task<WpfApp1.ServiceReference1.SetMaxAttachmentSizeResponse> SetMaxAttachmentSizeAsync(WpfApp1.ServiceReference1.SetMaxAttachmentSizeRequest request);
        
        // CODEGEN: Generating message contract since message GetInProcBuildCompletionNotificationAvailabilityRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03/GetInProcBuildCompletionNotificationAvailability", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WpfApp1.ServiceReference1.GetInProcBuildCompletionNotificationAvailabilityResponse GetInProcBuildCompletionNotificationAvailability(WpfApp1.ServiceReference1.GetInProcBuildCompletionNotificationAvailabilityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03/GetInProcBuildCompletionNotificationAvailability", ReplyAction="*")]
        System.Threading.Tasks.Task<WpfApp1.ServiceReference1.GetInProcBuildCompletionNotificationAvailabilityResponse> GetInProcBuildCompletionNotificationAvailabilityAsync(WpfApp1.ServiceReference1.GetInProcBuildCompletionNotificationAvailabilityRequest request);
        
        // CODEGEN: Generating message contract since message SetInProcBuildCompletionNotificationAvailabilityRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03/SetInProcBuildCompletionNotificationAvailability", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WpfApp1.ServiceReference1.SetInProcBuildCompletionNotificationAvailabilityResponse SetInProcBuildCompletionNotificationAvailability(WpfApp1.ServiceReference1.SetInProcBuildCompletionNotificationAvailabilityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03/SetInProcBuildCompletionNotificationAvailability", ReplyAction="*")]
        System.Threading.Tasks.Task<WpfApp1.ServiceReference1.SetInProcBuildCompletionNotificationAvailabilityResponse> SetInProcBuildCompletionNotificationAvailabilityAsync(WpfApp1.ServiceReference1.SetInProcBuildCompletionNotificationAvailabilityRequest request);
        
        // CODEGEN: Generating message contract since message GetMaxBuildListSizeRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03/GetMaxBuildListSize", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WpfApp1.ServiceReference1.GetMaxBuildListSizeResponse GetMaxBuildListSize(WpfApp1.ServiceReference1.GetMaxBuildListSizeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03/GetMaxBuildListSize", ReplyAction="*")]
        System.Threading.Tasks.Task<WpfApp1.ServiceReference1.GetMaxBuildListSizeResponse> GetMaxBuildListSizeAsync(WpfApp1.ServiceReference1.GetMaxBuildListSizeRequest request);
        
        // CODEGEN: Generating message contract since message SetMaxBuildListSizeRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03/SetMaxBuildListSize", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WpfApp1.ServiceReference1.SetMaxBuildListSizeResponse SetMaxBuildListSize(WpfApp1.ServiceReference1.SetMaxBuildListSizeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03/SetMaxBuildListSize", ReplyAction="*")]
        System.Threading.Tasks.Task<WpfApp1.ServiceReference1.SetMaxBuildListSizeResponse> SetMaxBuildListSizeAsync(WpfApp1.ServiceReference1.SetMaxBuildListSizeRequest request);
        
        // CODEGEN: Generating message contract since message GetWorkItemQueryTimeoutRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03/GetWorkItemQueryTimeout", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WpfApp1.ServiceReference1.GetWorkItemQueryTimeoutResponse GetWorkItemQueryTimeout(WpfApp1.ServiceReference1.GetWorkItemQueryTimeoutRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03/GetWorkItemQueryTimeout", ReplyAction="*")]
        System.Threading.Tasks.Task<WpfApp1.ServiceReference1.GetWorkItemQueryTimeoutResponse> GetWorkItemQueryTimeoutAsync(WpfApp1.ServiceReference1.GetWorkItemQueryTimeoutRequest request);
        
        // CODEGEN: Generating message contract since message SetWorkItemQueryTimeoutRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03/SetWorkItemQueryTimeout", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WpfApp1.ServiceReference1.SetWorkItemQueryTimeoutResponse SetWorkItemQueryTimeout(WpfApp1.ServiceReference1.SetWorkItemQueryTimeoutRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03/SetWorkItemQueryTimeout", ReplyAction="*")]
        System.Threading.Tasks.Task<WpfApp1.ServiceReference1.SetWorkItemQueryTimeoutResponse> SetWorkItemQueryTimeoutAsync(WpfApp1.ServiceReference1.SetWorkItemQueryTimeoutRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
        "nSettingsService/03")]
    public partial class RequestHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private bool useDisambiguatedIdentityStringField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool UseDisambiguatedIdentityString {
            get {
                return this.useDisambiguatedIdentityStringField;
            }
            set {
                this.useDisambiguatedIdentityStringField = value;
                this.RaisePropertyChanged("UseDisambiguatedIdentityString");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWorkitemTrackingVersion", WrapperNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
        "nSettingsService/03", IsWrapped=true)]
    public partial class GetWorkitemTrackingVersionRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03")]
        public WpfApp1.ServiceReference1.RequestHeader RequestHeader;
        
        public GetWorkitemTrackingVersionRequest() {
        }
        
        public GetWorkitemTrackingVersionRequest(WpfApp1.ServiceReference1.RequestHeader RequestHeader) {
            this.RequestHeader = RequestHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWorkitemTrackingVersionResponse", WrapperNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
        "nSettingsService/03", IsWrapped=true)]
    public partial class GetWorkitemTrackingVersionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03", Order=0)]
        public string GetWorkitemTrackingVersionResult;
        
        public GetWorkitemTrackingVersionResponse() {
        }
        
        public GetWorkitemTrackingVersionResponse(string GetWorkitemTrackingVersionResult) {
            this.GetWorkitemTrackingVersionResult = GetWorkitemTrackingVersionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMaxAttachmentSize", WrapperNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
        "nSettingsService/03", IsWrapped=true)]
    public partial class GetMaxAttachmentSizeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03")]
        public WpfApp1.ServiceReference1.RequestHeader RequestHeader;
        
        public GetMaxAttachmentSizeRequest() {
        }
        
        public GetMaxAttachmentSizeRequest(WpfApp1.ServiceReference1.RequestHeader RequestHeader) {
            this.RequestHeader = RequestHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMaxAttachmentSizeResponse", WrapperNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
        "nSettingsService/03", IsWrapped=true)]
    public partial class GetMaxAttachmentSizeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03", Order=0)]
        public long GetMaxAttachmentSizeResult;
        
        public GetMaxAttachmentSizeResponse() {
        }
        
        public GetMaxAttachmentSizeResponse(long GetMaxAttachmentSizeResult) {
            this.GetMaxAttachmentSizeResult = GetMaxAttachmentSizeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetMaxAttachmentSize", WrapperNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
        "nSettingsService/03", IsWrapped=true)]
    public partial class SetMaxAttachmentSizeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03")]
        public WpfApp1.ServiceReference1.RequestHeader RequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03", Order=0)]
        public long maxSize;
        
        public SetMaxAttachmentSizeRequest() {
        }
        
        public SetMaxAttachmentSizeRequest(WpfApp1.ServiceReference1.RequestHeader RequestHeader, long maxSize) {
            this.RequestHeader = RequestHeader;
            this.maxSize = maxSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetMaxAttachmentSizeResponse", WrapperNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
        "nSettingsService/03", IsWrapped=true)]
    public partial class SetMaxAttachmentSizeResponse {
        
        public SetMaxAttachmentSizeResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInProcBuildCompletionNotificationAvailability", WrapperNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
        "nSettingsService/03", IsWrapped=true)]
    public partial class GetInProcBuildCompletionNotificationAvailabilityRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03")]
        public WpfApp1.ServiceReference1.RequestHeader RequestHeader;
        
        public GetInProcBuildCompletionNotificationAvailabilityRequest() {
        }
        
        public GetInProcBuildCompletionNotificationAvailabilityRequest(WpfApp1.ServiceReference1.RequestHeader RequestHeader) {
            this.RequestHeader = RequestHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInProcBuildCompletionNotificationAvailabilityResponse", WrapperNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
        "nSettingsService/03", IsWrapped=true)]
    public partial class GetInProcBuildCompletionNotificationAvailabilityResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03", Order=0)]
        public bool GetInProcBuildCompletionNotificationAvailabilityResult;
        
        public GetInProcBuildCompletionNotificationAvailabilityResponse() {
        }
        
        public GetInProcBuildCompletionNotificationAvailabilityResponse(bool GetInProcBuildCompletionNotificationAvailabilityResult) {
            this.GetInProcBuildCompletionNotificationAvailabilityResult = GetInProcBuildCompletionNotificationAvailabilityResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetInProcBuildCompletionNotificationAvailability", WrapperNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
        "nSettingsService/03", IsWrapped=true)]
    public partial class SetInProcBuildCompletionNotificationAvailabilityRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03")]
        public WpfApp1.ServiceReference1.RequestHeader RequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03", Order=0)]
        public bool isEnabled;
        
        public SetInProcBuildCompletionNotificationAvailabilityRequest() {
        }
        
        public SetInProcBuildCompletionNotificationAvailabilityRequest(WpfApp1.ServiceReference1.RequestHeader RequestHeader, bool isEnabled) {
            this.RequestHeader = RequestHeader;
            this.isEnabled = isEnabled;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetInProcBuildCompletionNotificationAvailabilityResponse", WrapperNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
        "nSettingsService/03", IsWrapped=true)]
    public partial class SetInProcBuildCompletionNotificationAvailabilityResponse {
        
        public SetInProcBuildCompletionNotificationAvailabilityResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMaxBuildListSize", WrapperNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
        "nSettingsService/03", IsWrapped=true)]
    public partial class GetMaxBuildListSizeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03")]
        public WpfApp1.ServiceReference1.RequestHeader RequestHeader;
        
        public GetMaxBuildListSizeRequest() {
        }
        
        public GetMaxBuildListSizeRequest(WpfApp1.ServiceReference1.RequestHeader RequestHeader) {
            this.RequestHeader = RequestHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMaxBuildListSizeResponse", WrapperNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
        "nSettingsService/03", IsWrapped=true)]
    public partial class GetMaxBuildListSizeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03", Order=0)]
        public int GetMaxBuildListSizeResult;
        
        public GetMaxBuildListSizeResponse() {
        }
        
        public GetMaxBuildListSizeResponse(int GetMaxBuildListSizeResult) {
            this.GetMaxBuildListSizeResult = GetMaxBuildListSizeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetMaxBuildListSize", WrapperNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
        "nSettingsService/03", IsWrapped=true)]
    public partial class SetMaxBuildListSizeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03")]
        public WpfApp1.ServiceReference1.RequestHeader RequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03", Order=0)]
        public int maxBuildListSize;
        
        public SetMaxBuildListSizeRequest() {
        }
        
        public SetMaxBuildListSizeRequest(WpfApp1.ServiceReference1.RequestHeader RequestHeader, int maxBuildListSize) {
            this.RequestHeader = RequestHeader;
            this.maxBuildListSize = maxBuildListSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetMaxBuildListSizeResponse", WrapperNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
        "nSettingsService/03", IsWrapped=true)]
    public partial class SetMaxBuildListSizeResponse {
        
        public SetMaxBuildListSizeResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWorkItemQueryTimeout", WrapperNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
        "nSettingsService/03", IsWrapped=true)]
    public partial class GetWorkItemQueryTimeoutRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03")]
        public WpfApp1.ServiceReference1.RequestHeader RequestHeader;
        
        public GetWorkItemQueryTimeoutRequest() {
        }
        
        public GetWorkItemQueryTimeoutRequest(WpfApp1.ServiceReference1.RequestHeader RequestHeader) {
            this.RequestHeader = RequestHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWorkItemQueryTimeoutResponse", WrapperNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
        "nSettingsService/03", IsWrapped=true)]
    public partial class GetWorkItemQueryTimeoutResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03", Order=0)]
        public int GetWorkItemQueryTimeoutResult;
        
        public GetWorkItemQueryTimeoutResponse() {
        }
        
        public GetWorkItemQueryTimeoutResponse(int GetWorkItemQueryTimeoutResult) {
            this.GetWorkItemQueryTimeoutResult = GetWorkItemQueryTimeoutResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetWorkItemQueryTimeout", WrapperNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
        "nSettingsService/03", IsWrapped=true)]
    public partial class SetWorkItemQueryTimeoutRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03")]
        public WpfApp1.ServiceReference1.RequestHeader RequestHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
            "nSettingsService/03", Order=0)]
        public int workItemQueryTimeout;
        
        public SetWorkItemQueryTimeoutRequest() {
        }
        
        public SetWorkItemQueryTimeoutRequest(WpfApp1.ServiceReference1.RequestHeader RequestHeader, int workItemQueryTimeout) {
            this.RequestHeader = RequestHeader;
            this.workItemQueryTimeout = workItemQueryTimeout;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetWorkItemQueryTimeoutResponse", WrapperNamespace="http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/configuratio" +
        "nSettingsService/03", IsWrapped=true)]
    public partial class SetWorkItemQueryTimeoutResponse {
        
        public SetWorkItemQueryTimeoutResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ConfigurationSettingsServiceSoapChannel : WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConfigurationSettingsServiceSoapClient : System.ServiceModel.ClientBase<WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap>, WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap {
        
        public ConfigurationSettingsServiceSoapClient() {
        }
        
        public ConfigurationSettingsServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConfigurationSettingsServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConfigurationSettingsServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConfigurationSettingsServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WpfApp1.ServiceReference1.GetWorkitemTrackingVersionResponse WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap.GetWorkitemTrackingVersion(WpfApp1.ServiceReference1.GetWorkitemTrackingVersionRequest request) {
            return base.Channel.GetWorkitemTrackingVersion(request);
        }
        
        public string GetWorkitemTrackingVersion(WpfApp1.ServiceReference1.RequestHeader RequestHeader) {
            WpfApp1.ServiceReference1.GetWorkitemTrackingVersionRequest inValue = new WpfApp1.ServiceReference1.GetWorkitemTrackingVersionRequest();
            inValue.RequestHeader = RequestHeader;
            WpfApp1.ServiceReference1.GetWorkitemTrackingVersionResponse retVal = ((WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap)(this)).GetWorkitemTrackingVersion(inValue);
            return retVal.GetWorkitemTrackingVersionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WpfApp1.ServiceReference1.GetWorkitemTrackingVersionResponse> WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap.GetWorkitemTrackingVersionAsync(WpfApp1.ServiceReference1.GetWorkitemTrackingVersionRequest request) {
            return base.Channel.GetWorkitemTrackingVersionAsync(request);
        }
        
        public System.Threading.Tasks.Task<WpfApp1.ServiceReference1.GetWorkitemTrackingVersionResponse> GetWorkitemTrackingVersionAsync(WpfApp1.ServiceReference1.RequestHeader RequestHeader) {
            WpfApp1.ServiceReference1.GetWorkitemTrackingVersionRequest inValue = new WpfApp1.ServiceReference1.GetWorkitemTrackingVersionRequest();
            inValue.RequestHeader = RequestHeader;
            return ((WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap)(this)).GetWorkitemTrackingVersionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WpfApp1.ServiceReference1.GetMaxAttachmentSizeResponse WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap.GetMaxAttachmentSize(WpfApp1.ServiceReference1.GetMaxAttachmentSizeRequest request) {
            return base.Channel.GetMaxAttachmentSize(request);
        }
        
        public long GetMaxAttachmentSize(WpfApp1.ServiceReference1.RequestHeader RequestHeader) {
            WpfApp1.ServiceReference1.GetMaxAttachmentSizeRequest inValue = new WpfApp1.ServiceReference1.GetMaxAttachmentSizeRequest();
            inValue.RequestHeader = RequestHeader;
            WpfApp1.ServiceReference1.GetMaxAttachmentSizeResponse retVal = ((WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap)(this)).GetMaxAttachmentSize(inValue);
            return retVal.GetMaxAttachmentSizeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WpfApp1.ServiceReference1.GetMaxAttachmentSizeResponse> WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap.GetMaxAttachmentSizeAsync(WpfApp1.ServiceReference1.GetMaxAttachmentSizeRequest request) {
            return base.Channel.GetMaxAttachmentSizeAsync(request);
        }
        
        public System.Threading.Tasks.Task<WpfApp1.ServiceReference1.GetMaxAttachmentSizeResponse> GetMaxAttachmentSizeAsync(WpfApp1.ServiceReference1.RequestHeader RequestHeader) {
            WpfApp1.ServiceReference1.GetMaxAttachmentSizeRequest inValue = new WpfApp1.ServiceReference1.GetMaxAttachmentSizeRequest();
            inValue.RequestHeader = RequestHeader;
            return ((WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap)(this)).GetMaxAttachmentSizeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WpfApp1.ServiceReference1.SetMaxAttachmentSizeResponse WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap.SetMaxAttachmentSize(WpfApp1.ServiceReference1.SetMaxAttachmentSizeRequest request) {
            return base.Channel.SetMaxAttachmentSize(request);
        }
        
        public void SetMaxAttachmentSize(WpfApp1.ServiceReference1.RequestHeader RequestHeader, long maxSize) {
            WpfApp1.ServiceReference1.SetMaxAttachmentSizeRequest inValue = new WpfApp1.ServiceReference1.SetMaxAttachmentSizeRequest();
            inValue.RequestHeader = RequestHeader;
            inValue.maxSize = maxSize;
            WpfApp1.ServiceReference1.SetMaxAttachmentSizeResponse retVal = ((WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap)(this)).SetMaxAttachmentSize(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WpfApp1.ServiceReference1.SetMaxAttachmentSizeResponse> WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap.SetMaxAttachmentSizeAsync(WpfApp1.ServiceReference1.SetMaxAttachmentSizeRequest request) {
            return base.Channel.SetMaxAttachmentSizeAsync(request);
        }
        
        public System.Threading.Tasks.Task<WpfApp1.ServiceReference1.SetMaxAttachmentSizeResponse> SetMaxAttachmentSizeAsync(WpfApp1.ServiceReference1.RequestHeader RequestHeader, long maxSize) {
            WpfApp1.ServiceReference1.SetMaxAttachmentSizeRequest inValue = new WpfApp1.ServiceReference1.SetMaxAttachmentSizeRequest();
            inValue.RequestHeader = RequestHeader;
            inValue.maxSize = maxSize;
            return ((WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap)(this)).SetMaxAttachmentSizeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WpfApp1.ServiceReference1.GetInProcBuildCompletionNotificationAvailabilityResponse WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap.GetInProcBuildCompletionNotificationAvailability(WpfApp1.ServiceReference1.GetInProcBuildCompletionNotificationAvailabilityRequest request) {
            return base.Channel.GetInProcBuildCompletionNotificationAvailability(request);
        }
        
        public bool GetInProcBuildCompletionNotificationAvailability(WpfApp1.ServiceReference1.RequestHeader RequestHeader) {
            WpfApp1.ServiceReference1.GetInProcBuildCompletionNotificationAvailabilityRequest inValue = new WpfApp1.ServiceReference1.GetInProcBuildCompletionNotificationAvailabilityRequest();
            inValue.RequestHeader = RequestHeader;
            WpfApp1.ServiceReference1.GetInProcBuildCompletionNotificationAvailabilityResponse retVal = ((WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap)(this)).GetInProcBuildCompletionNotificationAvailability(inValue);
            return retVal.GetInProcBuildCompletionNotificationAvailabilityResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WpfApp1.ServiceReference1.GetInProcBuildCompletionNotificationAvailabilityResponse> WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap.GetInProcBuildCompletionNotificationAvailabilityAsync(WpfApp1.ServiceReference1.GetInProcBuildCompletionNotificationAvailabilityRequest request) {
            return base.Channel.GetInProcBuildCompletionNotificationAvailabilityAsync(request);
        }
        
        public System.Threading.Tasks.Task<WpfApp1.ServiceReference1.GetInProcBuildCompletionNotificationAvailabilityResponse> GetInProcBuildCompletionNotificationAvailabilityAsync(WpfApp1.ServiceReference1.RequestHeader RequestHeader) {
            WpfApp1.ServiceReference1.GetInProcBuildCompletionNotificationAvailabilityRequest inValue = new WpfApp1.ServiceReference1.GetInProcBuildCompletionNotificationAvailabilityRequest();
            inValue.RequestHeader = RequestHeader;
            return ((WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap)(this)).GetInProcBuildCompletionNotificationAvailabilityAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WpfApp1.ServiceReference1.SetInProcBuildCompletionNotificationAvailabilityResponse WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap.SetInProcBuildCompletionNotificationAvailability(WpfApp1.ServiceReference1.SetInProcBuildCompletionNotificationAvailabilityRequest request) {
            return base.Channel.SetInProcBuildCompletionNotificationAvailability(request);
        }
        
        public void SetInProcBuildCompletionNotificationAvailability(WpfApp1.ServiceReference1.RequestHeader RequestHeader, bool isEnabled) {
            WpfApp1.ServiceReference1.SetInProcBuildCompletionNotificationAvailabilityRequest inValue = new WpfApp1.ServiceReference1.SetInProcBuildCompletionNotificationAvailabilityRequest();
            inValue.RequestHeader = RequestHeader;
            inValue.isEnabled = isEnabled;
            WpfApp1.ServiceReference1.SetInProcBuildCompletionNotificationAvailabilityResponse retVal = ((WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap)(this)).SetInProcBuildCompletionNotificationAvailability(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WpfApp1.ServiceReference1.SetInProcBuildCompletionNotificationAvailabilityResponse> WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap.SetInProcBuildCompletionNotificationAvailabilityAsync(WpfApp1.ServiceReference1.SetInProcBuildCompletionNotificationAvailabilityRequest request) {
            return base.Channel.SetInProcBuildCompletionNotificationAvailabilityAsync(request);
        }
        
        public System.Threading.Tasks.Task<WpfApp1.ServiceReference1.SetInProcBuildCompletionNotificationAvailabilityResponse> SetInProcBuildCompletionNotificationAvailabilityAsync(WpfApp1.ServiceReference1.RequestHeader RequestHeader, bool isEnabled) {
            WpfApp1.ServiceReference1.SetInProcBuildCompletionNotificationAvailabilityRequest inValue = new WpfApp1.ServiceReference1.SetInProcBuildCompletionNotificationAvailabilityRequest();
            inValue.RequestHeader = RequestHeader;
            inValue.isEnabled = isEnabled;
            return ((WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap)(this)).SetInProcBuildCompletionNotificationAvailabilityAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WpfApp1.ServiceReference1.GetMaxBuildListSizeResponse WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap.GetMaxBuildListSize(WpfApp1.ServiceReference1.GetMaxBuildListSizeRequest request) {
            return base.Channel.GetMaxBuildListSize(request);
        }
        
        public int GetMaxBuildListSize(WpfApp1.ServiceReference1.RequestHeader RequestHeader) {
            WpfApp1.ServiceReference1.GetMaxBuildListSizeRequest inValue = new WpfApp1.ServiceReference1.GetMaxBuildListSizeRequest();
            inValue.RequestHeader = RequestHeader;
            WpfApp1.ServiceReference1.GetMaxBuildListSizeResponse retVal = ((WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap)(this)).GetMaxBuildListSize(inValue);
            return retVal.GetMaxBuildListSizeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WpfApp1.ServiceReference1.GetMaxBuildListSizeResponse> WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap.GetMaxBuildListSizeAsync(WpfApp1.ServiceReference1.GetMaxBuildListSizeRequest request) {
            return base.Channel.GetMaxBuildListSizeAsync(request);
        }
        
        public System.Threading.Tasks.Task<WpfApp1.ServiceReference1.GetMaxBuildListSizeResponse> GetMaxBuildListSizeAsync(WpfApp1.ServiceReference1.RequestHeader RequestHeader) {
            WpfApp1.ServiceReference1.GetMaxBuildListSizeRequest inValue = new WpfApp1.ServiceReference1.GetMaxBuildListSizeRequest();
            inValue.RequestHeader = RequestHeader;
            return ((WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap)(this)).GetMaxBuildListSizeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WpfApp1.ServiceReference1.SetMaxBuildListSizeResponse WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap.SetMaxBuildListSize(WpfApp1.ServiceReference1.SetMaxBuildListSizeRequest request) {
            return base.Channel.SetMaxBuildListSize(request);
        }
        
        public void SetMaxBuildListSize(WpfApp1.ServiceReference1.RequestHeader RequestHeader, int maxBuildListSize) {
            WpfApp1.ServiceReference1.SetMaxBuildListSizeRequest inValue = new WpfApp1.ServiceReference1.SetMaxBuildListSizeRequest();
            inValue.RequestHeader = RequestHeader;
            inValue.maxBuildListSize = maxBuildListSize;
            WpfApp1.ServiceReference1.SetMaxBuildListSizeResponse retVal = ((WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap)(this)).SetMaxBuildListSize(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WpfApp1.ServiceReference1.SetMaxBuildListSizeResponse> WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap.SetMaxBuildListSizeAsync(WpfApp1.ServiceReference1.SetMaxBuildListSizeRequest request) {
            return base.Channel.SetMaxBuildListSizeAsync(request);
        }
        
        public System.Threading.Tasks.Task<WpfApp1.ServiceReference1.SetMaxBuildListSizeResponse> SetMaxBuildListSizeAsync(WpfApp1.ServiceReference1.RequestHeader RequestHeader, int maxBuildListSize) {
            WpfApp1.ServiceReference1.SetMaxBuildListSizeRequest inValue = new WpfApp1.ServiceReference1.SetMaxBuildListSizeRequest();
            inValue.RequestHeader = RequestHeader;
            inValue.maxBuildListSize = maxBuildListSize;
            return ((WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap)(this)).SetMaxBuildListSizeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WpfApp1.ServiceReference1.GetWorkItemQueryTimeoutResponse WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap.GetWorkItemQueryTimeout(WpfApp1.ServiceReference1.GetWorkItemQueryTimeoutRequest request) {
            return base.Channel.GetWorkItemQueryTimeout(request);
        }
        
        public int GetWorkItemQueryTimeout(WpfApp1.ServiceReference1.RequestHeader RequestHeader) {
            WpfApp1.ServiceReference1.GetWorkItemQueryTimeoutRequest inValue = new WpfApp1.ServiceReference1.GetWorkItemQueryTimeoutRequest();
            inValue.RequestHeader = RequestHeader;
            WpfApp1.ServiceReference1.GetWorkItemQueryTimeoutResponse retVal = ((WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap)(this)).GetWorkItemQueryTimeout(inValue);
            return retVal.GetWorkItemQueryTimeoutResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WpfApp1.ServiceReference1.GetWorkItemQueryTimeoutResponse> WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap.GetWorkItemQueryTimeoutAsync(WpfApp1.ServiceReference1.GetWorkItemQueryTimeoutRequest request) {
            return base.Channel.GetWorkItemQueryTimeoutAsync(request);
        }
        
        public System.Threading.Tasks.Task<WpfApp1.ServiceReference1.GetWorkItemQueryTimeoutResponse> GetWorkItemQueryTimeoutAsync(WpfApp1.ServiceReference1.RequestHeader RequestHeader) {
            WpfApp1.ServiceReference1.GetWorkItemQueryTimeoutRequest inValue = new WpfApp1.ServiceReference1.GetWorkItemQueryTimeoutRequest();
            inValue.RequestHeader = RequestHeader;
            return ((WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap)(this)).GetWorkItemQueryTimeoutAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WpfApp1.ServiceReference1.SetWorkItemQueryTimeoutResponse WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap.SetWorkItemQueryTimeout(WpfApp1.ServiceReference1.SetWorkItemQueryTimeoutRequest request) {
            return base.Channel.SetWorkItemQueryTimeout(request);
        }
        
        public void SetWorkItemQueryTimeout(WpfApp1.ServiceReference1.RequestHeader RequestHeader, int workItemQueryTimeout) {
            WpfApp1.ServiceReference1.SetWorkItemQueryTimeoutRequest inValue = new WpfApp1.ServiceReference1.SetWorkItemQueryTimeoutRequest();
            inValue.RequestHeader = RequestHeader;
            inValue.workItemQueryTimeout = workItemQueryTimeout;
            WpfApp1.ServiceReference1.SetWorkItemQueryTimeoutResponse retVal = ((WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap)(this)).SetWorkItemQueryTimeout(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WpfApp1.ServiceReference1.SetWorkItemQueryTimeoutResponse> WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap.SetWorkItemQueryTimeoutAsync(WpfApp1.ServiceReference1.SetWorkItemQueryTimeoutRequest request) {
            return base.Channel.SetWorkItemQueryTimeoutAsync(request);
        }
        
        public System.Threading.Tasks.Task<WpfApp1.ServiceReference1.SetWorkItemQueryTimeoutResponse> SetWorkItemQueryTimeoutAsync(WpfApp1.ServiceReference1.RequestHeader RequestHeader, int workItemQueryTimeout) {
            WpfApp1.ServiceReference1.SetWorkItemQueryTimeoutRequest inValue = new WpfApp1.ServiceReference1.SetWorkItemQueryTimeoutRequest();
            inValue.RequestHeader = RequestHeader;
            inValue.workItemQueryTimeout = workItemQueryTimeout;
            return ((WpfApp1.ServiceReference1.ConfigurationSettingsServiceSoap)(this)).SetWorkItemQueryTimeoutAsync(inValue);
        }
    }
}
